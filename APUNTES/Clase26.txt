Sharding
Es un tipo de partición horizontal para nuestras bases de datos. Divide las tuplas de nuestras tablas en diferentes ubicaciones de acuerdo a ciertos criterios de modo que para hacer consultas, las tendremos que dirigir al shard o parte que corresponda.

Cuándo usar
Cuando tenemos grandes volúmenes de información estática que representa un problema para obtener solo unas cuantas tuplas en consultas frecuentes.

Inconvenientes
Cuando debamos hacer joins frecuentemente entre shards
Baja elasticidad. Los shards crecen de forma irregular unos más que otros y vuelve a ser necesario usar sharding (subsharding)
La llave primaria pierde utilidad
.........................................
++Sharding++ Es una técnica para distribuir las bases de datos de manera horizontal. La palabra viene de shard, que es el pedazo que queda de una ventana rota.

Son especialmente buenos para los datos estáticos
Una analogía válida para es una pizza (la base de datos) que una sola persona (el servidor) no se puede comer, entonces se parte en porciones que distintas personas (otros servidores) pueden comer.
++Desventajas++

Joins entre shards: no es recomendable para los casos de uso en donde precisaremos información de distintos shards regularmente
Baja elasticidad: porque se establece la estructura de antemano y los datos pueden cambiar (por ejemplo si el shard está hecho por fecha y en cierta época hay un pico de tráfico)
Reemplaza PK y sus ventajas: si precisamos un mismo rango de valores cuyos datos están en distintos shards
